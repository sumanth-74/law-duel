Tell Replit (paste this as one instruction)
Visual Overhaul — Bar Duel (mature arcane theme)

Do not rewrite logic. Keep current HTML structure.

Add /public/brand.css and /public/fx.js, import both in index.html.

Swap fonts to Inter Tight (UI) + Cinzel (headlines).

Apply the classes below to existing panels/buttons (or map with minimal class adds).

Hook fx.correct() and fx.wrong() in the points where you already reveal results.

1) /public/brand.css (paste as-is)
css
Copy
Edit
/* Fonts */
@import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@600..900&family=Inter+Tight:wght@400;600;800&display=swap');

:root{
  --bg:#0b0d12;
  --bg-grad:radial-gradient(1200px 600px at 10% -10%, #1b2340 0%, transparent 60%),
             radial-gradient(900px 500px at 90% 110%, #2a1538 0%, transparent 60%);
  --panel:#111520;
  --panel-2:#0d1220;
  --ink:#e8eaf2;
  --muted:#a0a8bc;
  --indigo:#5865f2;       /* accent */
  --gold:#d4b057;         /* accent */
  --danger:#ff6b81;
  --success:#2ee6a6;
  --ring:#7aa2ff;
  --radius:14px;
  --shadow:0 14px 40px rgba(0,0,0,.45), inset 0 1px 0 rgba(255,255,255,.04);
}

*{box-sizing:border-box}
html,body{height:100%}
body{
  margin:0; color:var(--ink); background:var(--bg); 
  background-image:var(--bg-grad);
  font-family:"Inter Tight",system-ui,Segoe UI,Roboto,Arial,sans-serif;
  letter-spacing:.1px;
}

/* Subtle noise overlay for depth */
body::after{
  content:""; position:fixed; inset:0; pointer-events:none;
  background-image:url('data:image/svg+xml;utf8,\
  <svg xmlns="http://www.w3.org/2000/svg" width="140" height="140" viewBox="0 0 140 140">\
  <filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="2"/></filter>\
  <rect width="100%" height="100%" filter="url(%23n)" opacity=".05"/></svg>');
  mix-blend-mode:overlay; opacity:.35;
}

/* Headings */
.h1{font-family:"Cinzel",serif; font-weight:800; font-size:clamp(28px,3vw,44px); letter-spacing:.5px}
.h2{font-family:"Cinzel",serif; font-weight:700; font-size:clamp(20px,2vw,28px)}

/* Containers / cards */
.panel{
  background:linear-gradient(180deg, rgba(255,255,255,.02), transparent),
             var(--panel);
  border:1px solid rgba(255,255,255,.06);
  border-radius:var(--radius);
  box-shadow:var(--shadow);
  backdrop-filter:saturate(120%) blur(6px);
}

.row{display:flex; gap:16px; align-items:center}
.stack{display:grid; gap:16px}

/* Buttons */
.btn{
  appearance:none; border:0; padding:14px 18px; border-radius:12px;
  color:white; font-weight:700; letter-spacing:.2px; cursor:pointer;
  background:linear-gradient(180deg, rgba(255,255,255,.08), rgba(0,0,0,.1)),
             linear-gradient(135deg, var(--indigo), #3e48c7);
  box-shadow:0 12px 28px rgba(88,101,242,.35);
  transition:transform .08s ease, box-shadow .2s ease, filter .2s ease;
}
.btn:hover{transform:translateY(-1px); filter:saturate(1.15)}
.btn.alt{
  background:linear-gradient(180deg, rgba(255,255,255,.08), rgba(0,0,0,.1)),
             linear-gradient(135deg, var(--gold), #8a6a1d);
  box-shadow:0 12px 28px rgba(212,176,87,.35);
}

/* Subject tiles */
.subject{
  background:var(--panel-2); border:1px solid rgba(255,255,255,.06);
  padding:14px; border-radius:12px; text-align:center; font-weight:600;
  transition:transform .06s ease, background .2s ease;
}
.subject:hover{transform:translateY(-1px); background:#0f1526}

/* Leaderboard rows */
.lb-row{
  display:grid; grid-template-columns: 40px 1fr auto;
  align-items:center; gap:12px; padding:12px 14px;
  background:rgba(255,255,255,.02); border:1px solid rgba(255,255,255,.06);
  border-radius:12px;
}
.lb-rank{font-weight:800; color:var(--gold)}
.lb-points{font-weight:800; opacity:.9}

/* Avatar */
.avatar{
  width:120px; height:120px; position:relative; 
  display:grid; place-items:center; 
  filter:drop-shadow(0 12px 24px rgba(0,0,0,.55));
}
.avatar .sprite{
  width:80px; height:80px; border-radius:18px;
  background:conic-gradient(from 210deg, #5837ff, #a642ff, #5ad6ff, #5837ff);
  -webkit-mask: radial-gradient(circle at 60% 35%, transparent 18px, black 19px),
                linear-gradient(black,black);
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.15);
  transform-origin:center bottom;
  transition:transform .25s ease, filter .25s ease;
}
.avatar .aura{
  position:absolute; inset:-12px; border-radius:24px; 
  background:radial-gradient(60% 55% at 50% 45%, rgba(88,101,242,.45), transparent 60%);
  filter:blur(18px); opacity:.6; pointer-events:none;
}
.avatar.lvlup .sprite{filter:saturate(1.2) brightness(1.1)}

/* FX: ring & shake */
.fx-ring{
  position:absolute; left:50%; top:50%; width:20px; height:20px; 
  border:2px solid var(--ring); border-radius:999px; pointer-events:none;
  transform: translate(-50%,-50%) scale(.2);
  animation: ring .6s ease-out forwards;
}
@keyframes ring{to{opacity:0; transform:translate(-50%,-50%) scale(7)}}
.shake{animation: shake .3s ease both}
@keyframes shake{
  10%{transform: translateX(-2px)}
  20%{transform: translateX(2px)}
  30%{transform: translateX(-2px)}
  40%{transform: translateX(2px)}
}

/* Forms */
.input, select{
  background:#0f1522; color:var(--ink); border:1px solid rgba(255,255,255,.08);
  border-radius:10px; padding:12px 14px; width:100%;
}

/* Utilities */
.center{display:grid; place-items:center}
.muted{color:var(--muted)}
How to use it quickly
Wrap your panels with class="panel stack"

Replace old buttons with class="btn" or class="btn alt"

Subject buttons with class="subject"

Avatar container:

html
Copy
Edit
<div class="avatar" id="avatar"><div class="aura"></div><div class="sprite" id="sprite"></div></div>
When the player levels up, add/remove avatar.classList.add('lvlup') for a pop.

2) /public/fx.js (tiny particle + hooks)
js
Copy
Edit
// Minimal, dependency-free FX for correct/incorrect feedback
export const fx = (() => {
  const arena = document.body; // or a specific container

  function ring(node){
    const r = document.createElement('div');
    r.className = 'fx-ring';
    node.appendChild(r);
    setTimeout(()=> r.remove(), 650);
  }

  function grow(spriteEl, level){
    const scale = Math.min(1.8, 1 + 0.08 * level);
    spriteEl.style.transform = `scale(${scale})`;
    spriteEl.closest('.avatar')?.classList.add('lvlup');
    setTimeout(()=>spriteEl.closest('.avatar')?.classList.remove('lvlup'), 300);
  }

  function correct(targetEl){
    ring(targetEl || document.getElementById('avatar'));
    arena.animate([{filter:'brightness(1.0)'},{filter:'brightness(1.1)'},{filter:'brightness(1.0)'}], {duration:350});
  }

  function wrong(container){
    (container || document.querySelector('.panel'))?.classList.add('shake');
    setTimeout(()=> (container || document.querySelector('.panel'))?.classList.remove('shake'), 320);
  }

  return { correct, wrong, grow };
})();
Hook it up in your existing code:

html
Copy
Edit
<link rel="stylesheet" href="/brand.css">
<script type="module">
  import { fx } from '/fx.js';

  // After scoring:
  // if (isCorrect) { xp += 10; level = Math.floor(xp/50); fx.correct(document.getElementById('avatar')); fx.grow(document.getElementById('sprite'), level); }
  // else { fx.wrong(document.querySelector('#duelPanel')); }
</script>
3) Quick copy to Ghostwriter (optional)
“Apply the new visual theme by adding brand.css & fx.js, mapping existing panels to .panel, buttons to .btn, subject tiles to .subject, and replacing the avatar element with the .avatar/.sprite structure. Wire fx.correct() and fx.wrong() where results reveal. Ensure mobile tap targets ≥44px.”

